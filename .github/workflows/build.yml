name: Build
on:
  push:
    branches:
      - master # or the name of your main branch

jobs:
  build:
    name: Build
    runs-on: windows-latest
    steps:
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Cache SonarQube packages
        uses: actions/cache@v1
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache SonarQube scanner
        id: cache-sonar-scanner
        uses: actions/cache@v1
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
      - name: Install SonarQube scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
      - name: Setup MSBuild (vswhere-path)
        id: setup_msbuild_explicit
        uses: ./
        with:
          vswhere-path: C:\ProgramData\chocolatey\bin
      - name: Setup MSBuild (fallback)
        id: setup_msbuild_fallback
        uses: ./
        env:
          PATH: ''

      - name: Setup MSBuild (x64)
        id: setup_msbuild_path
        uses: ./
        with:
          vs-prerelease: true
          msbuild-architecture: 'x64'

      - name: echo msbuild path
        run: |
          echo "vswhere-path: ${{ steps.setup_msbuild_explicit.outputs.msbuildPath }}"
          echo "PATH: ${{ steps.setup_msbuild_path.outputs.msbuildPath }}"
          echo "Fallback: ${{ steps.setup_msbuild_fallback.outputs.msbuildPath }}"

      - name: echo MSBuild
        run: msbuild -version
        # - name: Build and analyze
        #   env:
        #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
        #   shell: powershell
        #   run: |
        #     .\.sonar\scanner\dotnet-sonarscanner begin /k:"Puvvada-Ananth_setup-msbuild_AYGrlOKvSB1XADPka4R_" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="${{ secrets.SONAR_HOST_URL }}"
        #     dotnet build
        #     .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
